<?xml version="1.0" encoding="UTF-8"?>
<unittest>
    <assert_eq>
        <alltypes_allranks typefilter="logical"/>
        <alltypes_allranks typefilter="integer"/>
        <alltypes_allranks typefilter="character" maxrank="0"/>
    </assert_eq>
    <assert_ne>
        <alltypes_allranks typefilter="logical"/>
        <alltypes_allranks typefilter="integer"/>
        <alltypes_allranks typefilter="character" maxrank="0"/>
    </assert_ne>
    
    <assert_lt>
        <alltypes_allranks typefilter="integer"/>
        <alltypes_allranks typefilter="real"/>
        <alltypes_allranks typefilter="character" maxrank="0"/>
    </assert_lt>
    <assert_le>
        <alltypes_allranks typefilter="integer"/>
        <alltypes_allranks typefilter="real"/>
        <alltypes_allranks typefilter="character" maxrank="0"/>
    </assert_le>
    <assert_gt>
        <alltypes_allranks typefilter="integer"/>
        <alltypes_allranks typefilter="real"/>
        <alltypes_allranks typefilter="character" maxrank="0"/>
    </assert_gt>
    <assert_ge>
        <alltypes_allranks typefilter="integer"/>
        <alltypes_allranks typefilter="real"/>
        <alltypes_allranks typefilter="character" maxrank="0"/>
    </assert_ge>
    
    <abserr comment="These functions never cause floating point errors (i.e., inf-inf)">
        <alltypes_allranks typefilter="real"/>
        <alltypes_allranks typefilter="complex"/>
    </abserr>
    <assert_abserr>
        <alltypes_allranks typefilter="real"/>
        <alltypes_allranks typefilter="complex"/>
    </assert_abserr>
    <relerr comment="These functions never cause floating point errors (i.e., inf-inf)">
        <alltypes_allranks typefilter="real"/>
        <alltypes_allranks typefilter="complex"/>
    </relerr>
    <assert_relerr>
        <alltypes_allranks typefilter="real"/>
        <alltypes_allranks typefilter="complex"/>
    </assert_relerr>
</unittest>